DEFS := $(wildcard *.def ../shared/*.def)
SOURCES := $(wildcard *.c ../shared/*.c) $(DEFS:.def=.c)
HEADERS := $(wildcard *.h ../shared/*.h) $(if $(NO_PINS_H),,pins.h) $(if $(NO_BITCODEC),,$(DEFS:.def=.h))
SDCC_FLAGS := --std-sdcc99 -mpic16 --fomit-frame-pointer --obanksel=1 --optimize-cmp --optimize-df --use-non-free -I. -I../shared $(SDCC_FLAGS)

$(PROJ).hex : $(sort $(notdir $(SOURCES:.c=.o))) $(LKR)
	echo "  LD $@"
	sdcc $(SDCC_FLAGS) -Wl,-m -Wl,-s -Wl,$(LKR) -o $@ $(filter-out $(LKR),$+) libc18f.lib

%.o : %.c $(HEADERS)
	echo "  CC $@"
	sdcc $(SDCC_FLAGS) -c $<

%.o : ../shared/%.c $(HEADERS)
	echo "  CC $@"
	sdcc $(SDCC_FLAGS) -c $<

pins.h pins.inc : pins.txt ../pingen/pingen
	echo "  PINGEN $@"
	../pingen/pingen pins.txt

../pingen/pingen : $(wildcard ../pingen/*.[ch])
	make -C ../pingen

$(DEFS:.def=.c) : %.c : %.def ../bitcodec/bitcodec ../bitcodec/bitcodec.py
	echo "  BITCODEC $@"
	../bitcodec/bitcodec $(basename $(notdir $@)) $< $(basename $@)

$(DEFS:.def=.h) : %.h : %.def ../bitcodec/bitcodec ../bitcodec/bitcodec.py
	echo "  BITCODEC $@"
	../bitcodec/bitcodec $(basename $(notdir $@)) $< $(basename $@)

.PHONY : clean
clean :
	$(RM) $(notdir $(SOURCES:.c=.asm) $(SOURCES:.c=.lst) $(SOURCES:.c=.o)) $(DEFS:.def=.c) $(DEFS:.def=.h) $(PROJ).cod $(PROJ).hex $(PROJ).lst $(PROJ).map pins.h pins.inc pingen
	$(RM) -r html

.PHONY : burn
burn : $(PROJ).hex
	pk2cmd $(PK2CMD_FLAGS) -F $<

.PHONY : doc
doc :
	doxygen

.SILENT :
