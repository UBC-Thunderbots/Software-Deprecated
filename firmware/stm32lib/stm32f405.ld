/* Define the three memory areas implemented by the STM32F4 series */
MEMORY {
	flash_region (RXAI) : ORIGIN = 0x08000000, LENGTH = 1M
	sram_region (RWXA) : ORIGIN = 0x20000000, LENGTH = 128K
	ccm_region (RWXA) : ORIGIN = 0x10000000, LENGTH = 64K
}

/* Lay out the data from the input object files in memory */
SECTIONS {
	/* The CPU always expects the exception vectors to be at the bottom of memory */
	.exception_vectors 0x08000000 : {
		KEEP(*(.exception_vectors))
	} >flash_region

	/* The CPU expects the interrupt vectors to be positioned directly after the exception vectors */
	.interrupt_vectors 0x08000040 : {
		KEEP(*(.interrupt_vectors))
	} >flash_region

	/* Add program code to the Flash following the vectors */
	.text : {
		*(.text .text.*)
	} >flash_region

	/* Read-only data can also live entirely in Flash */
	.rodata : {
		*(.rodata .rodata.*)
	} >flash_region

	/* Read-write non-zero-initialized data must live in RAM but a copy be stored in Flash for initialization */
	.data : {
		*(.data .data.*)
	} >sram_region AT>flash_region

	/* Zero-initialized data can live entirely in SRAM and be wiped on boot */
	.bss : {
		*(.bss .bss.*)
	} >sram_region AT>sram_region

	/* The stack can go in core-coupled memory for speed */
	.stack (NOLOAD) : {
		*(.stack)
	} >ccm_region AT>ccm_region
}

/* Provide symbols that the startup code uses to find the various sections in memory to initialize the data and wipe the bss */
linker_data_vma_start = ADDR(.data);
linker_data_vma_end = ADDR(.data) + SIZEOF(.data);
linker_data_lma_start = LOADADDR(.data);
linker_bss_vma_start = ADDR(.bss);
linker_bss_vma_end = ADDR(.bss) + SIZEOF(.bss);

/* Provide definitions of the CPU and peripheral registers */
OTG_FS_BASE = 0x50000000;
OTG_FS_GOTGCTL = OTG_FS_BASE + 0x000;
OTG_FS_GOTGINT = OTG_FS_BASE + 0x004;
OTG_FS_GAHBCFG = OTG_FS_BASE + 0x008;
OTG_FS_GUSBCFG = OTG_FS_BASE + 0x00C;
OTG_FS_GRSTCTL = OTG_FS_BASE + 0x010;
OTG_FS_GINTSTS = OTG_FS_BASE + 0x014;
OTG_FS_GINTMSK = OTG_FS_BASE + 0x018;
OTG_FS_GRXSTSR = OTG_FS_BASE + 0x01C;
OTG_FS_GRXSTSP = OTG_FS_BASE + 0x020;
OTG_FS_GRXFSIZ = OTG_FS_BASE + 0x024;
OTG_FS_HNPTXFSIZ = OTG_FS_BASE + 0x028;
OTG_FS_DIEPTXF0 = OTG_FS_BASE + 0x028;
OTG_FS_HNPTXSTS = OTG_FS_BASE + 0x02C;
OTG_FS_GCCFG = OTG_FS_BASE + 0x038;
OTG_FS_CID = OTG_FS_BASE + 0x03C;
OTG_FS_HPTXFSIZ = OTG_FS_BASE + 0x100;
OTG_FS_DIEPTXF1 = OTG_FS_BASE + 0x104;
OTG_FS_DIEPTXF2 = OTG_FS_BASE + 0x108;
OTG_FS_DIEPTXF3 = OTG_FS_BASE + 0x10C;
OTG_FS_HCFG = OTG_FS_BASE + 0x400;
OTG_FS_HFIR = OTG_FS_BASE + 0x404;
OTG_FS_HFNUM = OTG_FS_BASE + 0x408;
OTG_FS_HPTXSTS = OTG_FS_BASE + 0x410;
OTG_FS_HAINT = OTG_FS_BASE + 0x414;
OTG_FS_HAINTMSK = OTG_FS_BASE + 0x418;
OTG_FS_HPRT = OTG_FS_BASE + 0x440;
OTG_FS_HCCHAR0 = OTG_FS_BASE + 0x500;
OTG_FS_HCCHAR1 = OTG_FS_BASE + 0x520;
OTG_FS_HCCHAR2 = OTG_FS_BASE + 0x540;
OTG_FS_HCCHAR3 = OTG_FS_BASE + 0x560;
OTG_FS_HCCHAR4 = OTG_FS_BASE + 0x580;
OTG_FS_HCCHAR5 = OTG_FS_BASE + 0x5A0;
OTG_FS_HCCHAR6 = OTG_FS_BASE + 0x5C0;
OTG_FS_HCCHAR7 = OTG_FS_BASE + 0x5E0;
OTG_FS_HCINT0 = OTG_FS_BASE + 0x508;
OTG_FS_HCINT1 = OTG_FS_BASE + 0x528;
OTG_FS_HCINT2 = OTG_FS_BASE + 0x548;
OTG_FS_HCINT3 = OTG_FS_BASE + 0x568;
OTG_FS_HCINT4 = OTG_FS_BASE + 0x588;
OTG_FS_HCINT5 = OTG_FS_BASE + 0x5A8;
OTG_FS_HCINT6 = OTG_FS_BASE + 0x5C8;
OTG_FS_HCINT7 = OTG_FS_BASE + 0x5E8;
OTG_FS_HCINTMSK0 = OTG_FS_BASE + 0x50C;
OTG_FS_HCINTMSK1 = OTG_FS_BASE + 0x52C;
OTG_FS_HCINTMSK2 = OTG_FS_BASE + 0x54C;
OTG_FS_HCINTMSK3 = OTG_FS_BASE + 0x56C;
OTG_FS_HCINTMSK4 = OTG_FS_BASE + 0x58C;
OTG_FS_HCINTMSK5 = OTG_FS_BASE + 0x5AC;
OTG_FS_HCINTMSK6 = OTG_FS_BASE + 0x5CC;
OTG_FS_HCINTMSK7 = OTG_FS_BASE + 0x5EC;
OTG_FS_HCTSIZ0 = OTG_FS_BASE + 0x510;
OTG_FS_HCTSIZ1 = OTG_FS_BASE + 0x530;
OTG_FS_HCTSIZ2 = OTG_FS_BASE + 0x550;
OTG_FS_HCTSIZ3 = OTG_FS_BASE + 0x570;
OTG_FS_HCTSIZ4 = OTG_FS_BASE + 0x590;
OTG_FS_HCTSIZ5 = OTG_FS_BASE + 0x5B0;
OTG_FS_HCTSIZ6 = OTG_FS_BASE + 0x5D0;
OTG_FS_HCTSIZ7 = OTG_FS_BASE + 0x5F0;
OTG_FS_DCFG = OTG_FS_BASE + 0x800;
OTG_FS_DCTL = OTG_FS_BASE + 0x804;
OTG_FS_DSTS = OTG_FS_BASE + 0x808;
OTG_FS_DIEPMSK = OTG_FS_BASE + 0x810;
OTG_FS_DOEPMSK = OTG_FS_BASE + 0x814;
OTG_FS_DAINT = OTG_FS_BASE + 0x818;
OTG_FS_DAINTMSK = OTG_FS_BASE + 0x81C;
OTG_FS_DVBUSDIS = OTG_FS_BASE + 0x828;
OTG_FS_DVBUSPULSE = OTG_FS_BASE + 0x82C;
OTG_FS_DIEPEMPMSK = OTG_FS_BASE + 0x834;
OTG_FS_DIEPCTL0 = OTG_FS_BASE + 0x900;
OTG_FS_DIEPCTL1 = OTG_FS_BASE + 0x920;
OTG_FS_DIEPCTL2 = OTG_FS_BASE + 0x940;
OTG_FS_DIEPCTL3 = OTG_FS_BASE + 0x960;
OTG_FS_DTXFSTS0 = OTG_FS_BASE + 0x918;
OTG_FS_DTXFSTS1 = OTG_FS_BASE + 0x938;
OTG_FS_DTXFSTS2 = OTG_FS_BASE + 0x958;
OTG_FS_DTXFSTS3 = OTG_FS_BASE + 0x978;
OTG_FS_DOEPCTL0 = OTG_FS_BASE + 0xB00;
OTG_FS_DOEPCTL1 = OTG_FS_BASE + 0xB20;
OTG_FS_DOEPCTL2 = OTG_FS_BASE + 0xB40;
OTG_FS_DOEPCTL3 = OTG_FS_BASE + 0xB60;
OTG_FS_DIEPINT0 = OTG_FS_BASE + 0x908;
OTG_FS_DIEPINT1 = OTG_FS_BASE + 0x928;
OTG_FS_DIEPINT2 = OTG_FS_BASE + 0x948;
OTG_FS_DIEPINT3 = OTG_FS_BASE + 0x968;
OTG_FS_DOEPINT0 = OTG_FS_BASE + 0xB08;
OTG_FS_DOEPINT1 = OTG_FS_BASE + 0xB28;
OTG_FS_DOEPINT2 = OTG_FS_BASE + 0xB48;
OTG_FS_DOEPINT3 = OTG_FS_BASE + 0xB68;
OTG_FS_DIEPTSIZ0 = OTG_FS_BASE + 0x910;
OTG_FS_DIEPTSIZ1 = OTG_FS_BASE + 0x930;
OTG_FS_DIEPTSIZ2 = OTG_FS_BASE + 0x950;
OTG_FS_DIEPTSIZ3 = OTG_FS_BASE + 0x970;
OTG_FS_DOEPTSIZ0 = OTG_FS_BASE + 0xB10;
OTG_FS_DOEPTSIZ1 = OTG_FS_BASE + 0xB30;
OTG_FS_DOEPTSIZ2 = OTG_FS_BASE + 0xB50;
OTG_FS_DOEPTSIZ3 = OTG_FS_BASE + 0xB70;
OTG_FS_PCGCCTL = OTG_FS_BASE + 0xE00;
OTG_FS_FIFO = OTG_FS_BASE + 0x1000;

FLASH_BASE = 0x40023C00;
FLASH_ACR = FLASH_BASE + 0x00;
FLASH_KEYR = FLASH_BASE + 0x04;
FLASH_OPTKEYR = FLASH_BASE + 0x08;
FLASH_SR = FLASH_BASE + 0x0C;
FLASH_CR = FLASH_BASE + 0x10;
FLASH_OPTCR = FLASH_BASE + 0x14;

RCC_BASE = 0x40023800;
RCC_CR = RCC_BASE + 0x00;
RCC_PLLCFGR = RCC_BASE + 0x04;
RCC_CFGR = RCC_BASE + 0x08;
RCC_CIR = RCC_BASE + 0x0C;
RCC_AHB1RSTR = RCC_BASE + 0x10;
RCC_AHB2RSTR = RCC_BASE + 0x14;
RCC_AHB3RSTR = RCC_BASE + 0x18;
RCC_APB1RSTR = RCC_BASE + 0x20;
RCC_APB2RSTR = RCC_BASE + 0x24;
RCC_AHB1ENR = RCC_BASE + 0x30;
RCC_AHB2ENR = RCC_BASE + 0x34;
RCC_AHB3ENR = RCC_BASE + 0x38;
RCC_APB1ENR = RCC_BASE + 0x40;
RCC_APB2ENR = RCC_BASE + 0x44;
RCC_AHB1LPENR = RCC_BASE + 0x50;
RCC_AHB2LPENR = RCC_BASE + 0x54;
RCC_AHB3LPENR = RCC_BASE + 0x58;
RCC_APB1LPENR = RCC_BASE + 0x60;
RCC_APB2LPENR = RCC_BASE + 0x64;
RCC_BDCR = RCC_BASE + 0x70;
RCC_CSR = RCC_BASE + 0x74;
RCC_SSCGR = RCC_BASE + 0x80;
RCC_PLLI2SCFGR = RCC_BASE + 0x84;

GPIOI_BASE = 0x40022000;
GPIOI_MODER = GPIOI_BASE + 0x00;
GPIOI_OTYPER = GPIOI_BASE + 0x04;
GPIOI_OSPEEDR = GPIOI_BASE + 0x08;
GPIOI_PUPDR = GPIOI_BASE + 0x0C;
GPIOI_IDR = GPIOI_BASE + 0x10;
GPIOI_ODR = GPIOI_BASE + 0x14;
GPIOI_BSRR = GPIOI_BASE + 0x18;
GPIOI_LCKR = GPIOI_BASE + 0x1C;
GPIOI_AFRL = GPIOI_BASE + 0x20;
GPIOI_AFRH = GPIOI_BASE + 0x24;

GPIOH_BASE = 0x40021C00;
GPIOH_MODER = GPIOH_BASE + 0x00;
GPIOH_OTYPER = GPIOH_BASE + 0x04;
GPIOH_OSPEEDR = GPIOH_BASE + 0x08;
GPIOH_PUPDR = GPIOH_BASE + 0x0C;
GPIOH_IDR = GPIOH_BASE + 0x10;
GPIOH_ODR = GPIOH_BASE + 0x14;
GPIOH_BSRR = GPIOH_BASE + 0x18;
GPIOH_LCKR = GPIOH_BASE + 0x1C;
GPIOH_AFRL = GPIOH_BASE + 0x20;
GPIOH_AFRH = GPIOH_BASE + 0x24;

GPIOG_BASE = 0x40021800;
GPIOG_MODER = GPIOG_BASE + 0x00;
GPIOG_OTYPER = GPIOG_BASE + 0x04;
GPIOG_OSPEEDR = GPIOG_BASE + 0x08;
GPIOG_PUPDR = GPIOG_BASE + 0x0C;
GPIOG_IDR = GPIOG_BASE + 0x10;
GPIOG_ODR = GPIOG_BASE + 0x14;
GPIOG_BSRR = GPIOG_BASE + 0x18;
GPIOG_LCKR = GPIOG_BASE + 0x1C;
GPIOG_AFRL = GPIOG_BASE + 0x20;
GPIOG_AFRH = GPIOG_BASE + 0x24;

GPIOF_BASE = 0x40021400;
GPIOF_MODER = GPIOF_BASE + 0x00;
GPIOF_OTYPER = GPIOF_BASE + 0x04;
GPIOF_OSPEEDR = GPIOF_BASE + 0x08;
GPIOF_PUPDR = GPIOF_BASE + 0x0C;
GPIOF_IDR = GPIOF_BASE + 0x10;
GPIOF_ODR = GPIOF_BASE + 0x14;
GPIOF_BSRR = GPIOF_BASE + 0x18;
GPIOF_LCKR = GPIOF_BASE + 0x1C;
GPIOF_AFRL = GPIOF_BASE + 0x20;
GPIOF_AFRH = GPIOF_BASE + 0x24;

GPIOE_BASE = 0x40021000;
GPIOE_MODER = GPIOE_BASE + 0x00;
GPIOE_OTYPER = GPIOE_BASE + 0x04;
GPIOE_OSPEEDR = GPIOE_BASE + 0x08;
GPIOE_PUPDR = GPIOE_BASE + 0x0C;
GPIOE_IDR = GPIOE_BASE + 0x10;
GPIOE_ODR = GPIOE_BASE + 0x14;
GPIOE_BSRR = GPIOE_BASE + 0x18;
GPIOE_LCKR = GPIOE_BASE + 0x1C;
GPIOE_AFRL = GPIOE_BASE + 0x20;
GPIOE_AFRH = GPIOE_BASE + 0x24;

GPIOD_BASE = 0x40020C00;
GPIOD_MODER = GPIOD_BASE + 0x00;
GPIOD_OTYPER = GPIOD_BASE + 0x04;
GPIOD_OSPEEDR = GPIOD_BASE + 0x08;
GPIOD_PUPDR = GPIOD_BASE + 0x0C;
GPIOD_IDR = GPIOD_BASE + 0x10;
GPIOD_ODR = GPIOD_BASE + 0x14;
GPIOD_BSRR = GPIOD_BASE + 0x18;
GPIOD_LCKR = GPIOD_BASE + 0x1C;
GPIOD_AFRL = GPIOD_BASE + 0x20;
GPIOD_AFRH = GPIOD_BASE + 0x24;

GPIOC_BASE = 0x40020800;
GPIOC_MODER = GPIOC_BASE + 0x00;
GPIOC_OTYPER = GPIOC_BASE + 0x04;
GPIOC_OSPEEDR = GPIOC_BASE + 0x08;
GPIOC_PUPDR = GPIOC_BASE + 0x0C;
GPIOC_IDR = GPIOC_BASE + 0x10;
GPIOC_ODR = GPIOC_BASE + 0x14;
GPIOC_BSRR = GPIOC_BASE + 0x18;
GPIOC_LCKR = GPIOC_BASE + 0x1C;
GPIOC_AFRL = GPIOC_BASE + 0x20;
GPIOC_AFRH = GPIOC_BASE + 0x24;

GPIOB_BASE = 0x40020400;
GPIOB_MODER = GPIOB_BASE + 0x00;
GPIOB_OTYPER = GPIOB_BASE + 0x04;
GPIOB_OSPEEDR = GPIOB_BASE + 0x08;
GPIOB_PUPDR = GPIOB_BASE + 0x0C;
GPIOB_IDR = GPIOB_BASE + 0x10;
GPIOB_ODR = GPIOB_BASE + 0x14;
GPIOB_BSRR = GPIOB_BASE + 0x18;
GPIOB_LCKR = GPIOB_BASE + 0x1C;
GPIOB_AFRL = GPIOB_BASE + 0x20;
GPIOB_AFRH = GPIOB_BASE + 0x24;

GPIOA_BASE = 0x40020000;
GPIOA_MODER = GPIOA_BASE + 0x00;
GPIOA_OTYPER = GPIOA_BASE + 0x04;
GPIOA_OSPEEDR = GPIOA_BASE + 0x08;
GPIOA_PUPDR = GPIOA_BASE + 0x0C;
GPIOA_IDR = GPIOA_BASE + 0x10;
GPIOA_ODR = GPIOA_BASE + 0x14;
GPIOA_BSRR = GPIOA_BASE + 0x18;
GPIOA_LCKR = GPIOA_BASE + 0x1C;
GPIOA_AFRL = GPIOA_BASE + 0x20;
GPIOA_AFRH = GPIOA_BASE + 0x24;

TIM11_BASE = 0x40014800;
TIM11_CR1 = TIM11_BASE + 0x00;
TIM11_DIER = TIM11_BASE + 0x0C;
TIM11_SR = TIM11_BASE + 0x10;
TIM11_EGR = TIM11_BASE + 0x14;
TIM11_CCMR1 = TIM11_BASE + 0x18;
TIM11_CCER = TIM11_BASE + 0x20;
TIM11_CNT = TIM11_BASE + 0x24;
TIM11_PSC = TIM11_BASE + 0x28;
TIM11_ARR = TIM11_BASE + 0x2C;
TIM11_CCR1 = TIM11_BASE + 0x34;
TIM11_OR = TIM11_BASE + 0x50;

TIM10_BASE = 0x40014400;
TIM10_CR1 = TIM10_BASE + 0x00;
TIM10_DIER = TIM10_BASE + 0x0C;
TIM10_SR = TIM10_BASE + 0x10;
TIM10_EGR = TIM10_BASE + 0x14;
TIM10_CCMR1 = TIM10_BASE + 0x18;
TIM10_CCER = TIM10_BASE + 0x20;
TIM10_CNT = TIM10_BASE + 0x24;
TIM10_PSC = TIM10_BASE + 0x28;
TIM10_ARR = TIM10_BASE + 0x2C;
TIM10_CCR1 = TIM10_BASE + 0x34;

TIM9_BASE = 0x40014000;
TIM9_CR1 = TIM9_BASE + 0x00;
TIM9_CR2 = TIM9_BASE + 0x04;
TIM9_SMCR = TIM9_BASE + 0x08;
TIM9_DIER = TIM9_BASE + 0x0C;
TIM9_SR = TIM9_BASE + 0x10;
TIM9_EGR = TIM9_BASE + 0x14;
TIM9_CCMR1 = TIM9_BASE + 0x18;
TIM9_CCER = TIM9_BASE + 0x20;
TIM9_CNT = TIM9_BASE + 0x24;
TIM9_PSC = TIM9_BASE + 0x28;
TIM9_ARR = TIM9_BASE + 0x2C;
TIM9_CCR1 = TIM9_BASE + 0x34;
TIM9_CCR2 = TIM9_BASE + 0x38;

EXTI_BASE = 0x40013C00;
EXTI_IMR = EXTI_BASE + 0x00;
EXTI_EMR = EXTI_BASE + 0x04;
EXTI_RTSR = EXTI_BASE + 0x08;
EXTI_FTSR = EXTI_BASE + 0x0C;
EXTI_SWIER = EXTI_BASE + 0x10;
EXTI_PR = EXTI_BASE + 0x14;

SYSCFG_BASE = 0x40013800;
SYSCFG_MEMRMP = SYSCFG_BASE + 0x00;
SYSCFG_PMC = SYSCFG_BASE + 0x04;
SYSCFG_EXTICR = SYSCFG_BASE + 0x08;
SYSCFG_CMPCR = SYSCFG_BASE + 0x20;

SPI1_BASE = 0x40013000;
SPI1_CR1 = SPI1_BASE + 0x00;
SPI1_CR2 = SPI1_BASE + 0x04;
SPI1_SR = SPI1_BASE + 0x08;
SPI1_DR = SPI1_BASE + 0x0C;
SPI1_CRCPR = SPI1_BASE + 0x10;
SPI1_RXCRCR = SPI1_BASE + 0x14;
SPI1_TXCRCR = SPI1_BASE + 0x18;
SPI1_I2SCFGR = SPI1_BASE + 0x1C;
SPI1_I2SPR = SPI1_BASE + 0x20;

ADC_GROUP_BASE = 0x40012000;

ADC1_BASE = ADC_GROUP_BASE;
ADC1_SR = ADC1_BASE + 0x00;
ADC1_CR1 = ADC1_BASE + 0x04;
ADC1_CR2 = ADC1_BASE + 0x08;
ADC1_SMPR1 = ADC1_BASE + 0x0C;
ADC1_SMPR2 = ADC1_BASE + 0x10;
ADC1_JOFR1 = ADC1_BASE + 0x14;
ADC1_JOFR2 = ADC1_BASE + 0x18;
ADC1_JOFR3 = ADC1_BASE + 0x1C;
ADC1_JOFR4 = ADC1_BASE + 0x20;
ADC1_HTR = ADC1_BASE + 0x24;
ADC1_LTR = ADC1_BASE + 0x28;
ADC1_SQR1 = ADC1_BASE + 0x2C;
ADC1_SQR2 = ADC1_BASE + 0x30;
ADC1_SQR3 = ADC1_BASE + 0x34;
ADC1_JSQR = ADC1_BASE + 0x38;
ADC1_JDR1 = ADC1_BASE + 0x3C;
ADC1_JDR2 = ADC1_BASE + 0x40;
ADC1_JDR3 = ADC1_BASE + 0x44;
ADC1_JDR4 = ADC1_BASE + 0x48;
ADC1_DR = ADC1_BASE + 0x4C;

ADC2_BASE = ADC_GROUP_BASE + 0x100;
ADC2_SR = ADC2_BASE + 0x00;
ADC2_CR1 = ADC2_BASE + 0x04;
ADC2_CR2 = ADC2_BASE + 0x08;
ADC2_SMPR1 = ADC2_BASE + 0x0C;
ADC2_SMPR2 = ADC2_BASE + 0x10;
ADC2_JOFR1 = ADC2_BASE + 0x14;
ADC2_JOFR2 = ADC2_BASE + 0x18;
ADC2_JOFR3 = ADC2_BASE + 0x1C;
ADC2_JOFR4 = ADC2_BASE + 0x20;
ADC2_HTR = ADC2_BASE + 0x24;
ADC2_LTR = ADC2_BASE + 0x28;
ADC2_SQR1 = ADC2_BASE + 0x2C;
ADC2_SQR2 = ADC2_BASE + 0x30;
ADC2_SQR3 = ADC2_BASE + 0x34;
ADC2_JSQR = ADC2_BASE + 0x38;
ADC2_JDR1 = ADC2_BASE + 0x3C;
ADC2_JDR2 = ADC2_BASE + 0x40;
ADC2_JDR3 = ADC2_BASE + 0x44;
ADC2_JDR4 = ADC2_BASE + 0x48;
ADC2_DR = ADC2_BASE + 0x4C;

ADC3_BASE = ADC_GROUP_BASE + 0x200;
ADC3_SR = ADC3_BASE + 0x00;
ADC3_CR1 = ADC3_BASE + 0x04;
ADC3_CR2 = ADC3_BASE + 0x08;
ADC3_SMPR1 = ADC3_BASE + 0x0C;
ADC3_SMPR2 = ADC3_BASE + 0x10;
ADC3_JOFR1 = ADC3_BASE + 0x14;
ADC3_JOFR2 = ADC3_BASE + 0x18;
ADC3_JOFR3 = ADC3_BASE + 0x1C;
ADC3_JOFR4 = ADC3_BASE + 0x20;
ADC3_HTR = ADC3_BASE + 0x24;
ADC3_LTR = ADC3_BASE + 0x28;
ADC3_SQR1 = ADC3_BASE + 0x2C;
ADC3_SQR2 = ADC3_BASE + 0x30;
ADC3_SQR3 = ADC3_BASE + 0x34;
ADC3_JSQR = ADC3_BASE + 0x38;
ADC3_JDR1 = ADC3_BASE + 0x3C;
ADC3_JDR2 = ADC3_BASE + 0x40;
ADC3_JDR3 = ADC3_BASE + 0x44;
ADC3_JDR4 = ADC3_BASE + 0x48;
ADC3_DR = ADC3_BASE + 0x4C;

ADC_COMMON_BASE = ADC_GROUP_BASE + 0x300;
ADC_CSR = ADC_COMMON_BASE + 0x00;
ADC_CCR = ADC_COMMON_BASE + 0x04;
ADC_CDR = ADC_COMMON_BASE + 0x08;

TIM8_BASE = 0x40010400;
TIM8_CR1 = TIM8_BASE + 0x00;
TIM8_CR2 = TIM8_BASE + 0x04;
TIM8_SMCR = TIM8_BASE + 0x08;
TIM8_DIER = TIM8_BASE + 0x0C;
TIM8_SR = TIM8_BASE + 0x10;
TIM8_EGR = TIM8_BASE + 0x14;
TIM8_CCMR1 = TIM8_BASE + 0x18;
TIM8_CCMR2 = TIM8_BASE + 0x1C;
TIM8_CCER = TIM8_BASE + 0x20;
TIM8_CNT = TIM8_BASE + 0x24;
TIM8_PSC = TIM8_BASE + 0x28;
TIM8_ARR = TIM8_BASE + 0x2C;
TIM8_RCR = TIM8_BASE + 0x30;
TIM8_CCR1 = TIM8_BASE + 0x34;
TIM8_CCR2 = TIM8_BASE + 0x38;
TIM8_CCR3 = TIM8_BASE + 0x3C;
TIM8_CCR4 = TIM8_BASE + 0x40;
TIM8_BDTR = TIM8_BASE + 0x44;
TIM8_DCR = TIM8_BASE + 0x48;
TIM8_DMAR = TIM8_BASE + 0x4C;

TIM1_BASE = 0x40010000;
TIM1_CR1 = TIM1_BASE + 0x00;
TIM1_CR2 = TIM1_BASE + 0x04;
TIM1_SMCR = TIM1_BASE + 0x08;
TIM1_DIER = TIM1_BASE + 0x0C;
TIM1_SR = TIM1_BASE + 0x10;
TIM1_EGR = TIM1_BASE + 0x14;
TIM1_CCMR1 = TIM1_BASE + 0x18;
TIM1_CCMR2 = TIM1_BASE + 0x1C;
TIM1_CCER = TIM1_BASE + 0x20;
TIM1_CNT = TIM1_BASE + 0x24;
TIM1_PSC = TIM1_BASE + 0x28;
TIM1_ARR = TIM1_BASE + 0x2C;
TIM1_RCR = TIM1_BASE + 0x30;
TIM1_CCR1 = TIM1_BASE + 0x34;
TIM1_CCR2 = TIM1_BASE + 0x38;
TIM1_CCR3 = TIM1_BASE + 0x3C;
TIM1_CCR4 = TIM1_BASE + 0x40;
TIM1_BDTR = TIM1_BASE + 0x44;
TIM1_DCR = TIM1_BASE + 0x48;
TIM1_DMAR = TIM1_BASE + 0x4C;

PWR_BASE = 0x40007000;
PWR_CR = PWR_BASE + 0x00;
PWR_CSR = PWR_BASE + 0x04;

SPI3_BASE = 0x40003C00;
SPI3_CR1 = SPI3_BASE + 0x00;
SPI3_CR2 = SPI3_BASE + 0x04;
SPI3_SR = SPI3_BASE + 0x08;
SPI3_DR = SPI3_BASE + 0x0C;
SPI3_CRCPR = SPI3_BASE + 0x10;
SPI3_RXCRCR = SPI3_BASE + 0x14;
SPI3_TXCRCR = SPI3_BASE + 0x18;
SPI3_I2SCFGR = SPI3_BASE + 0x1C;
SPI3_I2SPR = SPI3_BASE + 0x20;

SPI2_BASE = 0x40003800;
SPI2_CR1 = SPI2_BASE + 0x00;
SPI2_CR2 = SPI2_BASE + 0x04;
SPI2_SR = SPI2_BASE + 0x08;
SPI2_DR = SPI2_BASE + 0x0C;
SPI2_CRCPR = SPI2_BASE + 0x10;
SPI2_RXCRCR = SPI2_BASE + 0x14;
SPI2_TXCRCR = SPI2_BASE + 0x18;
SPI2_I2SCFGR = SPI2_BASE + 0x1C;
SPI2_I2SPR = SPI2_BASE + 0x20;

TIM14_BASE = 0x40002000;
TIM14_CR1 = TIM14_BASE + 0x00;
TIM14_DIER = TIM14_BASE + 0x0C;
TIM14_SR = TIM14_BASE + 0x10;
TIM14_EGR = TIM14_BASE + 0x14;
TIM14_CCMR1 = TIM14_BASE + 0x18;
TIM14_CCER = TIM14_BASE + 0x20;
TIM14_CNT = TIM14_BASE + 0x24;
TIM14_PSC = TIM14_BASE + 0x28;
TIM14_ARR = TIM14_BASE + 0x2C;
TIM14_CCR1 = TIM14_BASE + 0x34;

TIM13_BASE = 0x40001C00;
TIM13_CR1 = TIM13_BASE + 0x00;
TIM13_DIER = TIM13_BASE + 0x0C;
TIM13_SR = TIM13_BASE + 0x10;
TIM13_EGR = TIM13_BASE + 0x14;
TIM13_CCMR1 = TIM13_BASE + 0x18;
TIM13_CCER = TIM13_BASE + 0x20;
TIM13_CNT = TIM13_BASE + 0x24;
TIM13_PSC = TIM13_BASE + 0x28;
TIM13_ARR = TIM13_BASE + 0x2C;
TIM13_CCR1 = TIM13_BASE + 0x34;

TIM12_BASE = 0x40001800;
TIM12_CR1 = TIM12_BASE + 0x00;
TIM12_CR2 = TIM12_BASE + 0x04;
TIM12_SMCR = TIM12_BASE + 0x08;
TIM12_DIER = TIM12_BASE + 0x0C;
TIM12_SR = TIM12_BASE + 0x10;
TIM12_EGR = TIM12_BASE + 0x14;
TIM12_CCMR1 = TIM12_BASE + 0x18;
TIM12_CCER = TIM12_BASE + 0x20;
TIM12_CNT = TIM12_BASE + 0x24;
TIM12_PSC = TIM12_BASE + 0x28;
TIM12_ARR = TIM12_BASE + 0x2C;
TIM12_CCR1 = TIM12_BASE + 0x34;
TIM12_CCR2 = TIM12_BASE + 0x38;

TIM7_BASE = 0x40001400;
TIM7_CR1 = TIM7_BASE + 0x00;
TIM7_CR2 = TIM7_BASE + 0x04;
TIM7_DIER = TIM7_BASE + 0x0C;
TIM7_SR = TIM7_BASE + 0x10;
TIM7_EGR = TIM7_BASE + 0x14;
TIM7_CNT = TIM7_BASE + 0x24;
TIM7_PSC = TIM7_BASE + 0x28;
TIM7_ARR = TIM7_BASE + 0x2C;

TIM6_BASE = 0x40001000;
TIM6_CR1 = TIM6_BASE + 0x00;
TIM6_CR2 = TIM6_BASE + 0x04;
TIM6_DIER = TIM6_BASE + 0x0C;
TIM6_SR = TIM6_BASE + 0x10;
TIM6_EGR = TIM6_BASE + 0x14;
TIM6_CNT = TIM6_BASE + 0x24;
TIM6_PSC = TIM6_BASE + 0x28;
TIM6_ARR = TIM6_BASE + 0x2C;

TIM5_BASE = 0x40000C00;
TIM5_CR1 = TIM5_BASE + 0x00;
TIM5_CR2 = TIM5_BASE + 0x04;
TIM5_SMCR = TIM5_BASE + 0x08;
TIM5_DIER = TIM5_BASE + 0x0C;
TIM5_SR = TIM5_BASE + 0x10;
TIM5_EGR = TIM5_BASE + 0x14;
TIM5_CCMR1 = TIM5_BASE + 0x18;
TIM5_CCMR2 = TIM5_BASE + 0x1C;
TIM5_CCER = TIM5_BASE + 0x20;
TIM5_CNT = TIM5_BASE + 0x24;
TIM5_PSC = TIM5_BASE + 0x28;
TIM5_ARR = TIM5_BASE + 0x2C;
TIM5_CCR1 = TIM5_BASE + 0x34;
TIM5_CCR2 = TIM5_BASE + 0x38;
TIM5_CCR3 = TIM5_BASE + 0x3C;
TIM5_CCR4 = TIM5_BASE + 0x40;
TIM5_DCR = TIM5_BASE + 0x48;
TIM5_DMAR = TIM5_BASE + 0x4C;
TIM5_OR = TIM5_BASE + 0x50;

TIM4_BASE = 0x40000800;
TIM4_CR1 = TIM4_BASE + 0x00;
TIM4_CR2 = TIM4_BASE + 0x04;
TIM4_SMCR = TIM4_BASE + 0x08;
TIM4_DIER = TIM4_BASE + 0x0C;
TIM4_SR = TIM4_BASE + 0x10;
TIM4_EGR = TIM4_BASE + 0x14;
TIM4_CCMR1 = TIM4_BASE + 0x18;
TIM4_CCMR2 = TIM4_BASE + 0x1C;
TIM4_CCER = TIM4_BASE + 0x20;
TIM4_CNT = TIM4_BASE + 0x24;
TIM4_PSC = TIM4_BASE + 0x28;
TIM4_ARR = TIM4_BASE + 0x2C;
TIM4_CCR1 = TIM4_BASE + 0x34;
TIM4_CCR2 = TIM4_BASE + 0x38;
TIM4_CCR3 = TIM4_BASE + 0x3C;
TIM4_CCR4 = TIM4_BASE + 0x40;
TIM4_DCR = TIM4_BASE + 0x48;
TIM4_DMAR = TIM4_BASE + 0x4C;

TIM3_BASE = 0x40000400;
TIM3_CR1 = TIM3_BASE + 0x00;
TIM3_CR2 = TIM3_BASE + 0x04;
TIM3_SMCR = TIM3_BASE + 0x08;
TIM3_DIER = TIM3_BASE + 0x0C;
TIM3_SR = TIM3_BASE + 0x10;
TIM3_EGR = TIM3_BASE + 0x14;
TIM3_CCMR1 = TIM3_BASE + 0x18;
TIM3_CCMR2 = TIM3_BASE + 0x1C;
TIM3_CCER = TIM3_BASE + 0x20;
TIM3_CNT = TIM3_BASE + 0x24;
TIM3_PSC = TIM3_BASE + 0x28;
TIM3_ARR = TIM3_BASE + 0x2C;
TIM3_CCR1 = TIM3_BASE + 0x34;
TIM3_CCR2 = TIM3_BASE + 0x38;
TIM3_CCR3 = TIM3_BASE + 0x3C;
TIM3_CCR4 = TIM3_BASE + 0x40;
TIM3_DCR = TIM3_BASE + 0x48;
TIM3_DMAR = TIM3_BASE + 0x4C;

TIM2_BASE = 0x40000000;
TIM2_CR1 = TIM2_BASE + 0x00;
TIM2_CR2 = TIM2_BASE + 0x04;
TIM2_SMCR = TIM2_BASE + 0x08;
TIM2_DIER = TIM2_BASE + 0x0C;
TIM2_SR = TIM2_BASE + 0x10;
TIM2_EGR = TIM2_BASE + 0x14;
TIM2_CCMR1 = TIM2_BASE + 0x18;
TIM2_CCMR2 = TIM2_BASE + 0x1C;
TIM2_CCER = TIM2_BASE + 0x20;
TIM2_CNT = TIM2_BASE + 0x24;
TIM2_PSC = TIM2_BASE + 0x28;
TIM2_ARR = TIM2_BASE + 0x2C;
TIM2_CCR1 = TIM2_BASE + 0x34;
TIM2_CCR2 = TIM2_BASE + 0x38;
TIM2_CCR3 = TIM2_BASE + 0x3C;
TIM2_CCR4 = TIM2_BASE + 0x40;
TIM2_DCR = TIM2_BASE + 0x48;
TIM2_DMAR = TIM2_BASE + 0x4C;
TIM2_OR = TIM2_BASE + 0x50;

U_ID_L = 0x1FFF7A10;
U_ID_M = 0x1FFF7A14;
U_ID_H = 0x1FFF7A18;
FLASH_SIZE = 0x1FFF7A22;

SCS_BASE = 0xE000E000;
SCS_STCSR = SCS_BASE + 0x010;
SCS_STRVR = SCS_BASE + 0x014;
SCS_STCVR = SCS_BASE + 0x018;
SCS_STCALIB = SCS_BASE + 0x01C;
SCS_CPUID = SCS_BASE + 0xD00;
SCS_ICSR = SCS_BASE + 0xD04;
SCS_VTOR = SCS_BASE + 0xD08;
SCS_AIRCR = SCS_BASE + 0xD0C;
SCS_SCR = SCS_BASE + 0xD10;
SCS_CCR = SCS_BASE + 0xD14;
SCS_SHPR1 = SCS_BASE + 0xD18;
SCS_SHPR2 = SCS_BASE + 0xD1C;
SCS_SHPR3 = SCS_BASE + 0xD20;
SCS_SHCSR = SCS_BASE + 0xD24;
SCS_CFSR = SCS_BASE + 0xD28;
SCS_HFSR = SCS_BASE + 0xD2C;
SCS_DFSR = SCS_BASE + 0xD30;
SCS_MMFAR = SCS_BASE + 0xD34;
SCS_BFAR = SCS_BASE + 0xD38;
SCS_AFSR = SCS_BASE + 0xD3C;
SCS_ID_PFR0 = SCS_BASE + 0xD40;
SCS_ID_PFR1 = SCS_BASE + 0xD44;
SCS_ID_DFR0 = SCS_BASE + 0xD48;
SCS_MMFR0 = SCS_BASE + 0xD50;
SCS_MMFR2 = SCS_BASE + 0xD58;
SCS_ISAR0 = SCS_BASE + 0xD60;
SCS_ISAR1 = SCS_BASE + 0xD64;
SCS_ISAR2 = SCS_BASE + 0xD68;
SCS_ISAR3 = SCS_BASE + 0xD6C;
SCS_ISAR4 = SCS_BASE + 0xD70;
SCS_CPACR = SCS_BASE + 0xD88;
MPU_TYPE = SCS_BASE + 0xD90;
MPU_CTRL = SCS_BASE + 0xD94;
MPU_RNR = SCS_BASE + 0xD98;
MPU_RBAR = SCS_BASE + 0xD9C;
MPU_RASR = SCS_BASE + 0xDA0;
SCS_STIR = SCS_BASE + 0xF00;
NVIC_ICTR = SCS_BASE + 0x004;
NVIC_ISER = SCS_BASE + 0x100;
NVIC_ICER = SCS_BASE + 0x180;
NVIC_ISPR = SCS_BASE + 0x200;
NVIC_ICPR = SCS_BASE + 0x280;
NVIC_IABR = SCS_BASE + 0x300;
NVIC_IPR = SCS_BASE + 0x400;
FPU_FPCCR = SCS_BASE + 0xF34;
FPU_FPCAR = SCS_BASE + 0xF38;
FPU_FPDSCR = SCS_BASE + 0xF3C;
