ABI := arm-none-eabi
CC := $(ABI)-gcc
LD := $(ABI)-ld
OBJCOPY := $(ABI)-objcopy
override CFLAGS := -Wall -Wextra -Wdouble-promotion -std=gnu99 -O2 -mlittle-endian -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -g -fno-common -ffunction-sections -fdata-sections -static -isystem include $(CFLAGS)
override LDFLAGS := $(LDFLAGS) -Wl,--gc-sections $(CFLAGS)



PROJECT_SOURCES := $(shell find . -name '*.c')
PROJECT_SOURCES := $(PROJECT_SOURCES:./%.c=%.c)
PROJECT_OBJS := $(PROJECT_SOURCES:%.c=obj/%.o)
PROJECT_HEADERS := $(shell find . -name '*.h')

ifeq ($(USE_FREERTOS),1)
FREERTOS_SOURCES := $(wildcard ../freertos/source/*.c)
FREERTOS_OBJS := $(FREERTOS_SOURCES:../freertos/source/%.c=obj/freertos/%.o)
FREERTOS_HEADERS := $(wildcard ../freertos/include/*.h)
FREERTOS_CFLAGS := -isystem ../freertos/include -I.
endif

ifeq ($(USE_STM32LIB),1)
STM32LIB_SOURCES := $(wildcard ../stm32lib/*.c)
STM32LIB_OBJS := $(STM32LIB_SOURCES:../stm32lib/%.c=obj/stm32lib/%.o)
STM32LIB_HEADERS := $(shell find ../stm32lib/include -name '*.h')
STM32LIB_CFLAGS := -isystem ../stm32lib/include
LINKER_SCRIPT := ../stm32lib/stm32f405.ld
endif

ifeq ($(USE_USB),1)
USB_SOURCES := $(shell find ../usb -name '*.c')
USB_OBJS := $(USB_SOURCES:../usb/%.c=obj/usb/%.o)
USB_HEADERS := $(shell find ../usb -name '*.h')
USB_CFLAGS := -isystem ../usb/include
endif



BUILD_OBJS := $(PROJECT_OBJS) $(FREERTOS_OBJS) $(STM32LIB_OBJS) $(USB_OBJS)
BUILD_LDLIBS := $(PROJECT_LDLIBS) $(FREERTOS_LDLIBS) $(STM32LIB_LDLIBS) $(USB_LDLIBS)
DEP_HEADERS := $(PROJECT_HEADERS) $(FREERTOS_HEADERS) $(STM32LIB_HEADERS) $(USB_HEADERS)
override CFLAGS := $(CFLAGS) $(PROJECT_CFLAGS) $(FREERTOS_CFLAGS) $(STM32LIB_CFLAGS) $(USB_CFLAGS)
override LDLIBS := $(LDLIBS) $(PROJECT_LDLIBS) $(FREERTOS_LDLIBS) $(STM32LIB_LDLIBS) $(USB_LDLIBS) -lm
override LDFLAGS := $(LDFLAGS) -Wl,-T$(LINKER_SCRIPT)



.PHONY : world
world : $(PROJECT).bin



%.bin : %.elf
	@echo " OBJCOPY   $@"
	@$(OBJCOPY) -O binary $+ $@

$(PROJECT).elf : $(BUILD_OBJS) $(EXTRA_OBJS) $(BUILD_LDLIBS) $(LINKER_SCRIPT)
	@echo " LD        $@"
	@$(CC) $(LDFLAGS) -o$@ -Wl,-Map=$(PROJECT).map $(BUILD_OBJS) $(EXTRA_OBJS) $(LDLIBS)

$(BUILD_OBJS) : $(DEP_HEADERS) Makefile ../stm32lib/Makefile.common

$(PROJECT_OBJS) : obj/%.o : %.c
	@mkdir -p $(shell dirname $@)
	@echo " CC        $@"
	@$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

ifeq ($(USE_FREERTOS),1)
$(FREERTOS_OBJS) : obj/freertos/%.o : ../freertos/source/%.c FreeRTOSConfig.h $(FREERTOS_HEADERS)
	@mkdir -p $(shell dirname $@)
	@echo " CC        $@"
	@$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
endif

ifeq ($(USE_STM32LIB),1)
$(STM32LIB_OBJS) : obj/stm32lib/%.o : ../stm32lib/%.c $(STM32LIB_HEADERS)
	@mkdir -p $(shell dirname $@)
	@echo " CC        $@"
	@$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
endif

ifeq ($(USE_USB),1)
$(USB_OBJS) : obj/usb/%.o : ../usb/%.c $(USB_HEADERS)
	@mkdir -p $(shell dirname $@)
	@echo " CC        $@"
	@$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
endif

.PHONY : clean
clean :
	$(RM) $(PROJECT).a $(PROJECT).bin $(PROJECT).elf $(PROJECT).map
	$(RM) -r html obj

.PHONY : doc
doc :
	doxygen
