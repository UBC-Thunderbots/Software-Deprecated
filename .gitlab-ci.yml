before_script:
    - ./EnvironmentSetup/setup_software.sh 

stages:
    - build

# This job tests building the branch on it's own
build_feature_branch:
    stage: build
    script:
        # Make runners have their git config set properly
        - git config --global user.email "chead@chead.com"
        - git config --global user.name "Christopher Head"
        # -j: compile in parallel as much as possible
        # -l: limit load to stop us running out of virtual memory
        # run makefiles from toplevel
        - make -j -l 2 -C software
        - make test -C software
        # go into firmware and run the tests
        - make -C firmware/test

# Check that dev will build when we merge our feature branch in
build_merged_master:
    stage: build
    script:
        # Make runners have their git config set properly
        - git config --global user.email "chead@chead.com"
        - git config --global user.name "Christopher Head"
        - git merge origin/dev --no-commit --no-ff
        # -j: compile in parallel as much as possible
        # -l: limit load to stop us running out of virtual memory
        # run makefiles from top level
        - make -j -l 2 -C software
        - make test -C software
        # go into firmware and run the tests
        - make -C firmware/test 

# Merge our branch into dev and check that we still pass clang-format
check_formatting_master:
    stage: build
    script:
        # Make runners have their git config set properly
        - git config --global user.email "chead@chead.com"
        - git config --global user.name "Christopher Head"
        - git merge origin/dev --no-commit --no-ff
        - ./clang-format/fix_formatting.sh dev


